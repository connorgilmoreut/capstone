#for each cluster, compare green-building rent to median of non-green buildings rent
rent_comp <- gb_data %>%
select(CS_PropertyID, cluster, cluster_rent, Rent, green_rating) %>%
group_by(cluster) %>%
filter(green_rating == 1) %>%
mutate(green_comp = ifelse(Rent > cluster_rent, 'Green Building Rent Is Higher Than Cluster',
'Green Building Rent Is Lower Than Cluster'))
#for each cluster, compare green-building rent to median of non-green buildings rent
non_gb_med <- gb_data %>%
select(CS_PropertyID, cluster, cluster_rent, Rent, green_rating) %>%
group_by(cluster) %>%
filter(green_rating == 0) %>%
mutate(comp_rent = median(Rent))
#for each cluster, compare green-building rent to median of non-green buildings rent
new_gb_df <- rent_comp %>%
bind_rows(non_gb_med) %>%
mutate(comp_rent = ifelse(is.na(comp_rent), Rent, comp_rent)) %>%
arrange(cluster) %>%
select(cluster, green_rating, comp_rent) %>%
distinct(cluster, green_rating, comp_rent, .keep_all = TRUE)
comp_rent_green <- new_gb_df %>% filter(green_rating == 1)
comp_rent_nongreen <- new_gb_df %>% filter(green_rating == 0)
comp_rent_df <- comp_rent_green %>%
left_join(comp_rent_nongreen, by='cluster', suffix=c('_green', '_non_green')) %>%
mutate(comp_result = ifelse(comp_rent_green > comp_rent_non_green, 'Green Building Rent Is Higher', 'Non-Green Building Rent Is Higher')) %>%
select(cluster, comp_result) %>%
filter(is.na(comp_result) == FALSE)
#for each cluster, compare green-building rent to non-green buildings rent
ggplot(comp_rent_df, aes(comp_result,
fill=factor(ifelse(comp_result=="Green Building Rent Is Higher","Highlighted","Normal")))) +
geom_bar(stat='count') +
scale_fill_manual(name = "comp_result", values=c("green4","grey50")) +
labs(title="In 67% of Clusters, Green Buildings Have Higher Rent",
subtitle="a comparison of rent w/in clusters, adjusting for possible confounding cluster information",
y='frequency',
x='count of clusters where green or non-green building has higher rent') +
theme(legend.position = "none",
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Change axis line
axis.line = element_line(colour = "black"),
plot.title = element_text(face = "bold"))
gb_data$green_rating_label <- ifelse(gb_data$green_rating == 1, 'green', 'non-green')
med_green_15 <- gb_data %>%
filter(green_rating_label == 'green') %>%
filter(stories == 15)
med_green_15_rent <- median(med_green_15$Rent)
med_nongreen_15 <- gb_data %>%
filter(green_rating_label == 'non-green') %>%
filter(stories == 15)
med_nongreen_15_rent <- median(med_nongreen_15$Rent)
gb_data_15 <- gb_data %>%
filter(stories == 15)
#age
ggplot(gb_data_15, aes(x=stories, y=Rent,
fill=factor(ifelse(green_rating_label=="green","Highlighted","Normal")))) +
geom_boxplot() +
scale_fill_manual(name = "green_rating_label", values=c("green4","grey50")) +
scale_x_continuous(breaks = c(14.8, 15.2),
labels = c("Green Buildings", "Non-Green Buildings")) +
labs(title="Green Buildings With 15 Stories Have A Higher Median Rent",
subtitle="a comparison of rent, adjusting for possible confounding information in the number of stories",
y='rent value',
x='buildings with 15 stories') +
theme(legend.position = "none",
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Change axis line
axis.line = element_line(colour = "black"),
plot.title = element_text(face = "bold"),
#axis.text.x=element_blank(),
#axis.ticks.x=element_blank()
) +
ggplot2::annotate(
geom = "curve", x = 14.9, y = 46, xend = 14.81, yend = 38,
curvature = .3, arrow = arrow(length = unit(2, "mm"))) +
ggplot2::annotate(geom = "text", x = 14.91, y = 46.9, label = "Median Green Rent: $36.95",
hjust = "left", color='green4', fontface=2) +
ggplot2::annotate(
geom = "curve", x = 15.16, y = 15, xend = 15.19, yend = 24,
curvature = .3, arrow = arrow(length = unit(2, "mm"))) +
ggplot2::annotate(geom = "text", x = 14.91, y = 13, label = "Median Non-Green Rent: $24.36",
hjust = "left", fontface=2)
gb_data_size <- gb_data %>%
filter(size >= 245000 & size <= 255000)
gb_data_size_finer <- gb_data %>%
filter(size >= 249000 & size <= 251000)
gb_data_size_g <- gb_data %>%
filter(green_rating_label == 'green')
gb_data_size_ng <- gb_data_size %>%
filter(green_rating_label == 'non-green')
gb_data_size_g_rent <- median(gb_data_size_g$Rent)
gb_data_size_ng_rent <- median(gb_data_size_ng$Rent)
#age
ggplot(gb_data_size, aes(x=size, y=Rent, color=factor(green_rating_label))) +
geom_point() +
scale_fill_manual(values=c("green4","grey50")) +
scale_color_manual(values=c("green4","grey50")) +
geom_smooth(method = 'lm', se = FALSE) +
labs(title="However, Adjusting For Similar Size, Green Buildings Have A Lower Rent",
subtitle="a comparison of rent, adjusting for possible confounding information in the building size",
y='rent value',
x='green and non-green buildings size - around 250k sqft (+/- 5k sqft)') +
theme(legend.position = "none",
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Change axis line
axis.line = element_line(colour = "black"),
plot.title = element_text(face = "bold"))  +
ggplot2::annotate(
geom = "curve", x = 251000, y = 13.5, xend = 250400, yend = 26.5,
curvature = .3, color='green4', arrow = arrow(length = unit(2, "mm"))) +
ggplot2::annotate(geom = "text", x = 250000, y = 12, label = 'Median Green Rent Is $6.15 Lower',
hjust = "left", color='green4', fontface=2)
gb_data_age <- gb_data %>%
filter(leasing_rate >= 0.90) %>%
filter(age < 40) %>%
filter(renovated == 0) %>%
filter(net == 0) %>%
dplyr::group_by(green_rating_label, age) %>%
summarise(median_rent = median(Rent, na.rm = TRUE))
gb_data_age_gb <- gb_data_age %>%
dplyr::filter(green_rating_label == 'green')
gb_data_age
gb_data_age <- gb_data %>%
filter(leasing_rate >= 0.90) %>%
filter(age < 40) %>%
filter(renovated == 0) %>%
filter(net == 0)
gb_data_age
gb_data_age <- gb_data %>%
filter(leasing_rate >= 0.90) %>%
filter(age < 40) %>%
filter(renovated == 0) %>%
filter(net == 0) %>%
group_by(green_rating_label, age) %>%
summarise(median_rent = median(Rent, na.rm = TRUE))
gb_data_age
gb_data_age <- gb_data %>%
filter(leasing_rate >= 0.90) %>%
filter(age < 40) %>%
filter(renovated == 0) %>%
filter(net == 0) %>%
group_by(green_rating_label) %>%
summarise(median_rent = median(Rent, na.rm = TRUE))
gb_data_age
gb_data_age_gb <- gb_data_age %>%
dplyr::filter(green_rating_label == 'green')
gb_data_age <- gb_data %>%
filter(leasing_rate >= 0.90) %>%
filter(age < 40) %>%
filter(renovated == 0) %>%
filter(net == 0) %>%
group_by(green_rating_label)
gb_data_age
gb_data_age <- gb_data %>%
filter(leasing_rate >= 0.90) %>%
filter(age < 40) %>%
filter(renovated == 0) %>%
filter(net == 0) %>%
group_by(green_rating_label) %>%
mutate(median_rent = median(Rent, na.rm = TRUE))
gb_data_age
gb_data_age <- gb_data %>%
filter(leasing_rate >= 0.90) %>%
filter(age < 40) %>%
filter(renovated == 0) %>%
filter(net == 0) %>%
group_by(green_rating_label) %>%
mutate(median_rent = median(Rent, na.rm = TRUE))
gb_data_age_gb <- gb_data_age %>%
dplyr::filter(green_rating_label == 'green')
gb_data_age_ngb <- gb_data_age %>%
dplyr::filter(green_rating_label == 'non-green')
gb_data_age_comp <- gb_data_age_gb %>%
left_join(gb_data_age_ngb, by='age', suffix=c('_green', '_non_green')) %>%
mutate(green_comp = ifelse(median_rent_green > median_rent_non_green,
'green is higher', 'green is lower')) %>%
filter(green_comp == 'green is higher')
#age
ggplot(gb_data_age, aes(x=age, y=median_rent, color=factor(green_rating_label))) +
geom_point() +
geom_line() +
#geom_smooth(se=FALSE) +
scale_fill_manual(values=c("green4","grey50")) +
scale_color_manual(values=c("green4","grey50")) +
#scale_x_continuous(n.breaks=35) +
labs(title="Finally, Green Buildings Have Lower Rents Over Half the Years It's Around",
subtitle="a comparison of rent, adjusting for possible confounding information in the building age",
y='median rent value',
x='building age') +
theme(legend.title = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Change axis line
axis.line = element_line(colour = "black"),
plot.title = element_text(face = "bold"))
gb_data <- read.csv('greenbuildings.csv')
#for each cluster, compare green-building rent to median of non-green buildings rent
rent_comp <- gb_data %>%
select(CS_PropertyID, cluster, cluster_rent, Rent, green_rating) %>%
group_by(cluster) %>%
filter(green_rating == 1) %>%
mutate(green_comp = ifelse(Rent > cluster_rent, 'Green Building Rent Is Higher Than Cluster',
'Green Building Rent Is Lower Than Cluster'))
#for each cluster, compare green-building rent to median of non-green buildings rent
non_gb_med <- gb_data %>%
select(CS_PropertyID, cluster, cluster_rent, Rent, green_rating) %>%
group_by(cluster) %>%
filter(green_rating == 0) %>%
mutate(comp_rent = median(Rent))
#for each cluster, compare green-building rent to median of non-green buildings rent
new_gb_df <- rent_comp %>%
bind_rows(non_gb_med) %>%
mutate(comp_rent = ifelse(is.na(comp_rent), Rent, comp_rent)) %>%
arrange(cluster) %>%
select(cluster, green_rating, comp_rent) %>%
distinct(cluster, green_rating, comp_rent, .keep_all = TRUE)
comp_rent_green <- new_gb_df %>% filter(green_rating == 1)
comp_rent_nongreen <- new_gb_df %>% filter(green_rating == 0)
comp_rent_df <- comp_rent_green %>%
left_join(comp_rent_nongreen, by='cluster', suffix=c('_green', '_non_green')) %>%
mutate(comp_result = ifelse(comp_rent_green > comp_rent_non_green, 'Green Building Rent Is Higher', 'Non-Green Building Rent Is Higher')) %>%
select(cluster, comp_result) %>%
filter(is.na(comp_result) == FALSE)
#for each cluster, compare green-building rent to non-green buildings rent
ggplot(comp_rent_df, aes(comp_result,
fill=factor(ifelse(comp_result=="Green Building Rent Is Higher","Highlighted","Normal")))) +
geom_bar(stat='count') +
scale_fill_manual(name = "comp_result", values=c("green4","grey50")) +
labs(title="In 67% of Clusters, Green Buildings Have Higher Rent",
subtitle="a comparison of rent w/in clusters, adjusting for possible confounding cluster information",
y='frequency',
x='count of clusters where green or non-green building has higher rent') +
theme(legend.position = "none",
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Change axis line
axis.line = element_line(colour = "black"),
plot.title = element_text(face = "bold"))
gb_data$green_rating_label <- ifelse(gb_data$green_rating == 1, 'green', 'non-green')
med_green_15 <- gb_data %>%
filter(green_rating_label == 'green') %>%
filter(stories == 15)
med_green_15_rent <- median(med_green_15$Rent)
med_nongreen_15 <- gb_data %>%
filter(green_rating_label == 'non-green') %>%
filter(stories == 15)
med_nongreen_15_rent <- median(med_nongreen_15$Rent)
gb_data_15 <- gb_data %>%
filter(stories == 15)
#age
ggplot(gb_data_15, aes(x=stories, y=Rent,
fill=factor(ifelse(green_rating_label=="green","Highlighted","Normal")))) +
geom_boxplot() +
scale_fill_manual(name = "green_rating_label", values=c("green4","grey50")) +
scale_x_continuous(breaks = c(14.8, 15.2),
labels = c("Green Buildings", "Non-Green Buildings")) +
labs(title="Green Buildings With 15 Stories Have A Higher Median Rent",
subtitle="a comparison of rent, adjusting for possible confounding information in the number of stories",
y='rent value',
x='buildings with 15 stories') +
theme(legend.position = "none",
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Change axis line
axis.line = element_line(colour = "black"),
plot.title = element_text(face = "bold"),
#axis.text.x=element_blank(),
#axis.ticks.x=element_blank()
) +
ggplot2::annotate(
geom = "curve", x = 14.9, y = 46, xend = 14.81, yend = 38,
curvature = .3, arrow = arrow(length = unit(2, "mm"))) +
ggplot2::annotate(geom = "text", x = 14.91, y = 46.9, label = "Median Green Rent: $36.95",
hjust = "left", color='green4', fontface=2) +
ggplot2::annotate(
geom = "curve", x = 15.16, y = 15, xend = 15.19, yend = 24,
curvature = .3, arrow = arrow(length = unit(2, "mm"))) +
ggplot2::annotate(geom = "text", x = 14.91, y = 13, label = "Median Non-Green Rent: $24.36",
hjust = "left", fontface=2)
#age
ggplot(gb_data_15, aes(x=stories, y=Rent,
fill=factor(ifelse(green_rating_label=="green","Highlighted","Normal")))) +
geom_boxplot() +
scale_fill_manual(name = "green_rating_label", values=c("green4","grey50")) +
scale_x_continuous(breaks = c(14.8, 15.2),
labels = c("Green Buildings", "Non-Green Buildings")) +
labs(title="Green Buildings With 15 Stories Have A Higher Median Rent",
subtitle="a comparison of rent, adjusting for possible confounding information in the number of stories",
y='rent value',
x='buildings with 15 stories') +
theme(legend.position = "none",
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Change axis line
axis.line = element_line(colour = "black"),
plot.title = element_text(face = "bold"),
#axis.text.x=element_blank(),
#axis.ticks.x=element_blank()
) +
ggplot2::annotate(
geom = "curve", x = 14.9, y = 46, xend = 14.81, yend = 38,
curvature = .3, arrow = arrow(length = unit(2, "mm"))) +
ggplot2::annotate(geom = "text", x = 14.91, y = 46.9, label = "Median Green Rent: $36.95",
hjust = "left", color='green4', fontface=2) +
ggplot2::annotate(
geom = "curve", x = 15.16, y = 15, xend = 15.19, yend = 24,
curvature = .3, arrow = arrow(length = unit(2, "mm"))) +
ggplot2::annotate(geom = "text", x = 14.91, y = 13, label = "Median Non-Green Rent: $24.36",
hjust = "left", fontface=2)
gb_data_size <- gb_data %>%
filter(size >= 245000 & size <= 255000)
gb_data_size_finer <- gb_data %>%
filter(size >= 249000 & size <= 251000)
gb_data_size_g <- gb_data %>%
filter(green_rating_label == 'green')
gb_data_size_ng <- gb_data_size %>%
filter(green_rating_label == 'non-green')
gb_data_size_g_rent <- median(gb_data_size_g$Rent)
gb_data_size_ng_rent <- median(gb_data_size_ng$Rent)
#age
ggplot(gb_data_size, aes(x=size, y=Rent, color=factor(green_rating_label))) +
geom_point() +
scale_fill_manual(values=c("green4","grey50")) +
scale_color_manual(values=c("green4","grey50")) +
geom_smooth(method = 'lm', se = FALSE) +
labs(title="However, Adjusting For Similar Size, Green Buildings Have A Lower Rent",
subtitle="a comparison of rent, adjusting for possible confounding information in the building size",
y='rent value',
x='green and non-green buildings size - around 250k sqft (+/- 5k sqft)') +
theme(legend.position = "none",
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Change axis line
axis.line = element_line(colour = "black"),
plot.title = element_text(face = "bold"))  +
ggplot2::annotate(
geom = "curve", x = 251000, y = 13.5, xend = 250400, yend = 26.5,
curvature = .3, color='green4', arrow = arrow(length = unit(2, "mm"))) +
ggplot2::annotate(geom = "text", x = 250000, y = 12, label = 'Median Green Rent Is $6.15 Lower',
hjust = "left", color='green4', fontface=2)
gb_data_age <- gb_data %>%
filter(leasing_rate >= 0.90) %>%
filter(age < 40) %>%
filter(renovated == 0) %>%
filter(net == 0) %>%
group_by(green_rating_label, age) %>%
dplyr::summarize(median_rent = median(Rent, na.rm = TRUE))
gb_data_age
gb_data_age <- gb_data %>%
filter(leasing_rate >= 0.90) %>%
filter(age < 40) %>%
filter(renovated == 0) %>%
filter(net == 0) %>%
group_by(green_rating_label, age) %>%
dplyr::summarize(median_rent = median(Rent, na.rm = TRUE))
gb_data_age_gb <- gb_data_age %>%
dplyr::filter(green_rating_label == 'green')
gb_data_age_ngb <- gb_data_age %>%
dplyr::filter(green_rating_label == 'non-green')
gb_data_age_comp <- gb_data_age_gb %>%
left_join(gb_data_age_ngb, by='age', suffix=c('_green', '_non_green')) %>%
mutate(green_comp = ifelse(median_rent_green > median_rent_non_green,
'green is higher', 'green is lower')) %>%
filter(green_comp == 'green is higher')
#age
ggplot(gb_data_age, aes(x=age, y=median_rent, color=factor(green_rating_label))) +
geom_point() +
geom_line() +
#geom_smooth(se=FALSE) +
scale_fill_manual(values=c("green4","grey50")) +
scale_color_manual(values=c("green4","grey50")) +
#scale_x_continuous(n.breaks=35) +
labs(title="Finally, Green Buildings Have Lower Rents Over Half the Years It's Around",
subtitle="a comparison of rent, adjusting for possible confounding information in the building age",
y='median rent value',
x='building age') +
theme(legend.title = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Change axis line
axis.line = element_line(colour = "black"),
plot.title = element_text(face = "bold"))
install.packages("fpp3")
setwd("~/dev/demand-analytics")
knitr::opts_chunk$set(echo = TRUE)
library(mlogit)
data1=read.csv("../Data/DA2 MNLExtension.csv")
library(mlogit)
data1=read.csv("DA2 MNLExtension.csv")
data1$X=NULL
data1 <- mlogit.data(data1,choice="choice",shape="long",alt.var="product",id.var ="individual", method = "bfgs")
ml <- mlogit(choice ~ fat + calorie + water, data1)
summary(ml)
#heteroscedastic MNL, it also estimates a set of scale parameters
#for the distributions
hl <- mlogit(choice ~ fat + calorie + water, data1, heterosc = TRUE)
summary(hl)
#nested MNL, it also estimates a set of inclusive value of the nest
nl <- mlogit(choice ~ fat + calorie + water, data1, nests = list(national = "CHBN", private = c("HEB","HEBRd", "HEBFr")),unscaled=TRUE)
summary(nl)
#mixed MNL, it estimates the parameters of the distributions
#for the random parameters (these are treated as individual specific
#coefficients for the variables)
mixl <- mlogit(choice ~ fat + calorie + water, data1, rpar = c(fat = "n", calorie = "n", water = "n"), correlation = FALSE, R = 100, halton = NA)
summary(mixl)
lrtest(hl, ml)
waldtest(hl, ml)
scoretest(ml, heterosc = TRUE)
lrtest(nl, ml)
waldtest(nl, ml)
lrtest(mixl, ml)
waldtest(mixl, ml)
View(data1)
head(data1)
setwd("~/dev/unsupervised")
fit <- prcomp(AustinApartmentRent[2:9], scale=TRUE)
names(fit) # names of vars in object fit
summary(fit) # print proportion of variance accounted for
fit$sdev^2 # variance explained
fit$rotation # eigenvectors of corr matrix
fit <- prcomp(AustinApartmentRent[2:9], scale=TRUE)
names(fit) # names of vars in object fit
summary(fit) # print proportion of variance accounted for
fit$sdev^2 # variance explained
fit$rotation # eigenvectors of corr matrix
plot(fit,type="lines") # scree plot
biplot(fit, scale = 0) # biplot PC1 v PC2, scale=0 makes arrows scaled to rep loadings
fit$x # PC scores of each observation
m = cor(AustinApartmentRent[2:9]) # correlation matrix
m # print m
eigen(m) # eigenvalues and eigenvectors of m
library(readxl)
AustinApartmentRent <- read_excel("AustinApartmentRent.xls")
View(AustinApartmentRent)
fit <- prcomp(AustinApartmentRent[2:9], scale=TRUE)
names(fit) # names of vars in object fit
summary(fit) # print proportion of variance accounted for
fit$sdev^2 # variance explained
fit$rotation # eigenvectors of corr matrix
plot(fit,type="lines") # scree plot
biplot(fit, scale = 0) # biplot PC1 v PC2, scale=0 makes arrows scaled to rep loadings
fit$x # PC scores of each observation
m = cor(AustinApartmentRent[2:9]) # correlation matrix
m
eigen(m)
L <- cor(X, fit$x)
L <- cor(AustinApartmentRent[2:9], fit$x)
L
setwd("~/dev/capstone")
library(ggplot2)
library(dplyr)
library(ggplot2)
library(dplyr)
filelist = list.files(pattern = ".*.txt")
#assuming tab separated values with a header
datalist = lapply(filelist, function(x)read.table(x, header=T))
#assuming the same header/columns for all files
datafr = do.call("rbind", datalist)
library(ggplot2)
library(dplyr)
filelist = list.files(pattern = ".*.txt")
#assuming tab separated values with a header
datalist = lapply(filelist, function(x)read.table(x, header=T))
#assuming the same header/columns for all files
datafr = do.call("rbind", datalist)
list_of_files <- list.files(path = "/TxtDir.", recursive = TRUE,
pattern = "\\.txt$",
full.names = TRUE)
list_of_files <- list.files(path = "./TxtDir", recursive = TRUE,
pattern = "\\.txt$",
full.names = TRUE)
library(vroom)
df <- vroom(list_of_files, .id = "FileName")
df <- vroom(list_of_files)
library(tidyverse)
df <- list_of_files %>%
set_names(.) %>%
map_df(read_table2, .id = "FileName")
df <- vroom(list_of_files, .id = "FileName")
df <- vroom(list_of_files)
df <- vroom(list_of_files, delim=',')
list_of_files
df <- list_of_files %>%
set_names(.) %>%
map_df(read_table2, .id = "FileName")
library(ggplot2)
library(dplyr)
library(vroom)
library(tidyverse)
list_of_files <- list.files(path = "./TxtDir", recursive = TRUE,
pattern = "\\.txt$",
full.names = TRUE)
